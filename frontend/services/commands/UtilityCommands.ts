import type { CommandHandler, CommandResponse, Character, Campaign, Location } from "@/lib/types";

export const UtilityCommands: CommandHandler[] = [
    {
        name: "help",
        description: "Show help information for commands",
        usage: "/help [command]",
        examples: ["/help", "/help dice", "/help character"],
        category: "utility",
        execute: (args: string[], character: Character, campaign: Campaign): CommandResponse => {
            if (args.length === 0) {
                // Show general help
                const content = `üìö **Slash Commands Help**

Welcome to the D&D Adventure Chat! Here are the available command categories:

**üé≤ Dice Commands:**
‚Ä¢ \`/dice <notation>\` - Roll dice (e.g., /dice 1d20+5)
‚Ä¢ \`/roll <notation>\` - Alternative dice rolling
‚Ä¢ \`/d20 [modifier]\` - Quick d20 roll
‚Ä¢ \`/attack [weapon]\` - Attack roll with bonuses
‚Ä¢ \`/initiative\` - Roll initiative

**‚öîÔ∏è Combat Commands:**
‚Ä¢ \`/defend\` - Take defensive stance
‚Ä¢ \`/spell <spell>\` - Cast a spell
‚Ä¢ \`/item <item>\` - Use an item
‚Ä¢ \`/damage <dice>\` - Roll damage
‚Ä¢ \`/save <ability> [dc]\` - Saving throw

**üë§ Character Commands:**
‚Ä¢ \`/character\` - Show character overview
‚Ä¢ \`/stats\` - Display ability scores
‚Ä¢ \`/inventory\` - Show equipment and spells
‚Ä¢ \`/proficiency\` - List skills
‚Ä¢ \`/status\` - Current character status

**üîß Utility Commands:**
‚Ä¢ \`/help [command]\` - Show this help or specific command help
‚Ä¢ \`/location\` - Show current location info

**Examples:**
‚Ä¢ \`/dice 3d6+2\` - Roll 3d6 with +2 modifier
‚Ä¢ \`/attack sword\` - Attack with sword
‚Ä¢ \`/character\` - Show character info
‚Ä¢ \`/help dice\` - Show dice command help

Type \`/help <command>\` for detailed help on a specific command.`;

                return {
                    success: true,
                    content,
                    type: "info"
                };
            } else {
                // Show specific command help
                const commandName = args[0].toLowerCase();
                const content = `üìñ **Help: /${commandName}**

This command is not found or help is not available.

Use \`/help\` to see all available commands.`;

                return {
                    success: false,
                    content,
                    type: "error"
                };
            }
        }
    },

    {
        name: "location",
        description: "Show current location information",
        usage: "/location",
        examples: ["/location"],
        category: "utility",
        execute: (args: string[], character: Character, campaign: Campaign): CommandResponse => {
            // This would need to be passed from the parent component
            // For now, we'll show a placeholder
            const content = `üó∫Ô∏è **Location Information**

**Current Location:** ${character.currentLocation || "Unknown"}
**Campaign:** ${campaign.name}

**Note:** Location details are managed by the Dungeon Master. Ask about your surroundings or explore to discover more about your current location.`;

            return {
                success: true,
                content,
                type: "info",
                metadata: {
                    characterInfo: {
                        currentLocation: character.currentLocation
                    }
                }
            };
        }
    },

    {
        name: "clear",
        description: "Clear the chat (for testing purposes)",
        usage: "/clear",
        examples: ["/clear"],
        category: "utility",
        execute: (args: string[], character: Character, campaign: Campaign): CommandResponse => {
            const content = `üßπ **Chat Cleared**

The chat has been cleared. This is useful for testing or starting fresh.

**Note:** This only clears the current session. Your character progress and campaign state are preserved.`;

            return {
                success: true,
                content,
                type: "info"
            };
        }
    },

    {
        name: "version",
        description: "Show application version information",
        usage: "/version",
        examples: ["/version"],
        category: "utility",
        execute: (args: string[], character: Character, campaign: Campaign): CommandResponse => {
            const content = `‚ÑπÔ∏è **Application Information**

**D&D Adventure Chat** - Slash Commands System
**Version:** 1.0.0
**Features:**
‚Ä¢ Slash Commands for all game tools
‚Ä¢ Mobile-optimized interface
‚Ä¢ Local command processing
‚Ä¢ Comprehensive help system

**Character:** ${character.name} (Level ${character.level} ${character.class})
**Campaign:** ${campaign.name}`;

            return {
                success: true,
                content,
                type: "info"
            };
        }
    },

    {
        name: "commands",
        description: "List all available commands",
        usage: "/commands [category]",
        examples: ["/commands", "/commands dice", "/commands character"],
        category: "utility",
        execute: (args: string[], character: Character, campaign: Campaign): CommandResponse => {
            if (args.length === 0) {
                const content = `üìã **All Available Commands**

**üé≤ Dice Commands:**
‚Ä¢ \`/dice\` - Roll dice with notation
‚Ä¢ \`/roll\` - Alternative dice rolling
‚Ä¢ \`/d20\` - Quick d20 roll
‚Ä¢ \`/attack\` - Attack roll
‚Ä¢ \`/initiative\` - Initiative roll

**‚öîÔ∏è Combat Commands:**
‚Ä¢ \`/defend\` - Defensive action
‚Ä¢ \`/spell\` - Cast spell
‚Ä¢ \`/item\` - Use item
‚Ä¢ \`/damage\` - Roll damage
‚Ä¢ \`/save\` - Saving throw

**üë§ Character Commands:**
‚Ä¢ \`/character\` - Character overview
‚Ä¢ \`/stats\` - Ability scores
‚Ä¢ \`/inventory\` - Equipment & spells
‚Ä¢ \`/proficiency\` - Skills
‚Ä¢ \`/status\` - Current status

**üîß Utility Commands:**
‚Ä¢ \`/help\` - Show help
‚Ä¢ \`/location\` - Location info
‚Ä¢ \`/clear\` - Clear chat
‚Ä¢ \`/version\` - App version
‚Ä¢ \`/commands\` - This list

Use \`/commands <category>\` to see commands in a specific category.`;

                return {
                    success: true,
                    content,
                    type: "info"
                };
            } else {
                const category = args[0].toLowerCase();
                let categoryCommands: string[] = [];
                let categoryTitle = "";

                switch (category) {
                    case "dice":
                        categoryTitle = "üé≤ Dice Commands";
                        categoryCommands = [
                            "‚Ä¢ `/dice <notation>` - Roll dice (e.g., /dice 1d20+5)",
                            "‚Ä¢ `/roll <notation>` - Alternative dice rolling",
                            "‚Ä¢ `/d20 [modifier]` - Quick d20 roll",
                            "‚Ä¢ `/attack [weapon]` - Attack roll with bonuses",
                            "‚Ä¢ `/initiative` - Roll initiative"
                        ];
                        break;
                    case "combat":
                        categoryTitle = "‚öîÔ∏è Combat Commands";
                        categoryCommands = [
                            "‚Ä¢ `/defend` - Take defensive stance",
                            "‚Ä¢ `/spell <spell>` - Cast a spell",
                            "‚Ä¢ `/item <item>` - Use an item",
                            "‚Ä¢ `/damage <dice>` - Roll damage",
                            "‚Ä¢ `/save <ability> [dc]` - Saving throw"
                        ];
                        break;
                    case "character":
                        categoryTitle = "üë§ Character Commands";
                        categoryCommands = [
                            "‚Ä¢ `/character` - Show character overview",
                            "‚Ä¢ `/stats` - Display ability scores",
                            "‚Ä¢ `/inventory` - Show equipment and spells",
                            "‚Ä¢ `/proficiency` - List skills",
                            "‚Ä¢ `/status` - Current character status"
                        ];
                        break;
                    case "utility":
                        categoryTitle = "üîß Utility Commands";
                        categoryCommands = [
                            "‚Ä¢ `/help [command]` - Show help",
                            "‚Ä¢ `/location` - Show location info",
                            "‚Ä¢ `/clear` - Clear chat",
                            "‚Ä¢ `/version` - App version",
                            "‚Ä¢ `/commands` - List all commands"
                        ];
                        break;
                    default:
                        return {
                            success: false,
                            content: `Unknown category: ${category}\nAvailable categories: dice, combat, character, utility`,
                            type: "error"
                        };
                }

                const content = `${categoryTitle}

${categoryCommands.join('\n')}

Use \`/help <command>\` for detailed help on a specific command.`;

                return {
                    success: true,
                    content,
                    type: "info"
                };
            }
        }
    }
];
