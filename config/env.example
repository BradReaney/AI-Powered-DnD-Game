# Server Configuration
PORT=5001
NODE_ENV=development

# Port Configuration
# PORT: Backend server port (5001)
# FRONTEND_PORT: Frontend Next.js port (3000)

# MongoDB Configuration
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=password
MONGODB_URI=mongodb://localhost:27017/ai-dnd-game
MONGODB_URI_PROD=mongodb://localhost:27017/ai-dnd-game-prod

# Google Gemini AI Configuration
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_FLASH_LITE_MODEL=gemini-2.0-flash-lite
GEMINI_FLASH_MODEL=gemini-2.5-flash
GEMINI_PRO_MODEL=gemini-2.5-pro
MODEL_SELECTION_ENABLED=true
FLASH_LITE_QUALITY_THRESHOLD=0.6
FLASH_QUALITY_THRESHOLD=0.7
PRO_FALLBACK_ENABLED=true
THREE_MODEL_FALLBACK_ENABLED=true
FLASH_LITE_RESPONSE_TIME_THRESHOLD=3000
FLASH_RESPONSE_TIME_THRESHOLD=5000

# Security Configuration
JWT_SECRET=your_jwt_secret_here_change_in_production
CORS_ORIGIN=http://localhost:3000,http://localhost:3001,http://localhost:3002
SESSION_SECRET=your_session_secret_here_change_in_production

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/app.log

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Session Configuration
SESSION_MAX_AGE=86400000

# AI Context Configuration
MAX_CONTEXT_LENGTH=8000
CONTEXT_COMPRESSION_THRESHOLD=6000

# Frontend Configuration (Next.js)
NEXT_PUBLIC_API_URL=http://localhost:5001
NEXT_PUBLIC_APP_NAME=AI-Powered D&D Game
FRONTEND_PORT=3000

# Docker Configuration
# BACKEND_URL: Used by Next.js API routes to communicate with backend container
# Note: This should be the service name (e.g., 'http://backend:5001') for container-to-container communication
BACKEND_URL=http://backend:5001

# Redis Configuration (optional)
REDIS_PASSWORD=

# =============================================================================
# IMPORTANT NOTES FOR DOCKER SETUP
# =============================================================================
#
# CORS Configuration:
# - CORS_ORIGIN should include all frontend ports that might be used during development
# - Multiple ports are supported: http://localhost:3000,http://localhost:3001,http://localhost:3002
#
# Docker Environment Variables:
# - NEXT_PUBLIC_API_URL: Used by browser (client-side) - must be accessible from host
# - BACKEND_URL: Used by Next.js API routes (server-side) - uses Docker service names
#
# Port Conflicts:
# - If you get "address already in use" errors, ensure no local npm/ts-node processes are running
# - Use 'docker-compose up' instead of 'npm run dev' to avoid port conflicts
#
# AI Integration:
# - GEMINI_API_KEY must be a valid API key for AI story generation to work
# - The backend will automatically fall back between different Gemini models if needed
# - Test the AI integration at /test-ai route in the frontend
